Description: ignore SSL tests (certificate keys too short)
Author: Xavier Guimard <yadd@debian.org>
Forwarded: no
Last-Update: 2022-06-28

--- a/test/test.js
+++ b/test/test.js
@@ -516,6 +516,7 @@
     });
   });
 
+  /*
   it("should follow redirects over https", function () {
     app.get("/a", redirectsTo("/b"));
     app.get("/b", redirectsTo("/c"));
@@ -532,6 +533,7 @@
         assert.deepEqual(res.responseUrl, "https://localhost:3601/c");
       });
   });
+  */
 
   it("should destroy responses", function () {
     app.get("/a", hangingRedirectTo("/b"));
@@ -873,6 +875,7 @@
   });
 
   describe("should handle cross protocol redirects ", function () {
+    /*
     it("(https -> http -> https)", function () {
       app.get("/a", redirectsTo("http://localhost:3600/b"));
       app2.get("/b", redirectsTo("https://localhost:3601/c"));
@@ -906,6 +909,7 @@
           assert.deepEqual(res.responseUrl, "http://localhost:3600/c");
         });
     });
+    */
   });
 
   describe("should error on an unsupported protocol redirect", function () {
@@ -1776,6 +1780,7 @@
     });
   });
 
+  /*
   describe("should choose the right agent per protocol", function () {
     it("(https -> http -> https)", function () {
       app.get("/a", redirectsTo("http://localhost:3600/b"));
@@ -1809,6 +1814,7 @@
         });
     });
   });
+  */
 
   describe("should not hang on empty writes", function () {
     it("when data is the empty string without encoding", function () {
@@ -2128,7 +2134,7 @@
         app.get("/a", redirectsTo(testCase.redirectUrl));
         app.get("/b", sendsJson({ good: "yes" }));
         app2.port = 3601;
-        app2.all("*", proxy("localhost:3601"));
+        app2.all("(.*)", proxy("localhost:3601"));
 
         function setProxy(opts) {
           // assuming opts is a url.parse result
